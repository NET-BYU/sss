import random
import time

# List of every letter in the alphabet
choice_list = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "H",
    "I",
    "J",
    "K",
    "L",
    "M",
    "N",
    "O",
    "P",
    "Q",
    "R",
    "S",
    "T",
    "U",
    "V",
    "W",
    "X",
    "Y",
    "Z",
]
word_list = [
    "Abuse",
    "Adult",
    "Agent",
    "Anger",
    "Apple",
    "Award",
    "Basis",
    "Beach",
    "Birth",
    "Block",
    "Blood",
    "Board",
    "Brain",
    "Bread",
    "Break",
    "Brown",
    "Buyer",
    "Butts",
    "Cause",
    "Chain",
    "Chair",
    "Chest",
    "Chief",
    "Child",
    "China",
    "Claim",
    "Class",
    "Clock",
    "Coach",
    "Coast",
    "Court",
    "Cover",
    "Cream",
    "Crime",
    "Cross",
    "Crowd",
    "Crown",
    "Cycle",
    "Dance",
    "Death",
    "Depth",
    "Doubt",
    "Draft",
    "Drama",
    "Dream",
    "Dress",
    "Drink",
    "Drive",
    "Earth",
    "Enemy",
    "Entry",
    "Error",
    "Event",
    "Faith",
    "Fault",
    "Field",
    "Fight",
    "Final",
    "Floor",
    "Focus",
    "Force",
    "Frame",
    "Frank",
    "Front",
    "Fruit",
    "Glass",
    "Grant",
    "Grass",
    "Green",
    "Group",
    "Guide",
    "Heart",
    "Henry",
    "Horse",
    "Hotel",
    "House",
    "Image",
    "Index",
    "Input",
    "Issue",
    "Japan",
    "Jones",
    "Judge",
    "Knife",
    "Layer",
    "Level",
    "Lewis",
    "Light",
    "Limit",
    "Lunch",
    "Major",
    "March",
    "Match",
    "Metal",
    "Model",
    "Money",
    "Month",
    "Motor",
    "Mouth",
    "Music",
    "Night",
    "Noise",
    "North",
    "Novel",
    "Nurse",
    "Offer",
    "Order",
    "Other",
    "Owner",
    "Panel",
    "Paper",
    "Party",
    "Peace",
    "Peter",
    "Phase",
    "Phone",
    "Piece",
    "Pilot",
    "Pitch",
    "Place",
    "Plane",
    "Plant",
    "Plate",
    "Point",
    "Pound",
    "Power",
    "Press",
    "Price",
    "Pride",
    "Prize",
    "Proof",
    "Queen",
    "Radio",
    "Range",
    "Ratio",
    "Reply",
    "Right",
    "River",
    "Round",
    "Route",
    "Rugby",
    "Scale",
    "Scene",
    "Scope",
    "Score",
    "Sense",
    "Shape",
    "Share",
    "Sheep",
    "Sheet",
    "Shift",
    "Shirt",
    "Shock",
    "Sight",
    "Simon",
    "Skill",
    "Sleep",
    "Smile",
    "Smith",
    "Smoke",
    "Sound",
    "South",
    "Space",
    "Speed",
    "Spite",
    "Sport",
    "Squad",
    "Staff",
    "Stage",
    "Start",
    "State",
    "Steam",
    "Steel",
    "Stock",
    "Stone",
    "Store",
    "Study",
    "Stuff",
    "Style",
    "Sugar",
    "Table",
    "Taste",
    "Terry",
    "Theme",
    "Thing",
    "Title",
    "Total",
    "Touch",
    "Tower",
    "Track",
    "Trade",
    "Train",
    "Trend",
    "Trial",
    "Trust",
    "Truth",
    "Uncle",
    "Union",
    "Unity",
    "Value",
    "Video",
    "Visit",
    "Voice",
    "Waste",
    "Watch",
    "Water",
    "While",
    "White",
    "Whole",
    "Woman",
    "World",
    "Youth",
    "Admit",
    "Adopt",
    "Agree",
    "Allow",
    "Alter",
    "Apply",
    "Argue",
    "Arise",
    "Avoid",
    "Begin",
    "Blame",
    "Break",
    "Bring",
    "Build",
    "Burst",
    "Carry",
    "Catch",
    "Cause",
    "Check",
    "Claim",
    "Clean",
    "Clear",
    "Climb",
    "Close",
    "Count",
    "Cover",
    "Cross",
    "Dance",
    "Doubt",
    "Drink",
    "Drive",
    "Enjoy",
    "Enter",
    "Exist",
    "Fight",
    "Focus",
    "Force",
    "Guess",
    "Imply",
    "Issue",
    "Judge",
    "Laugh",
    "Learn",
    "Leave",
    "Limit",
    "Marry",
    "Match",
    "Occur",
    "Offer",
    "Order",
    "Phone",
    "Place",
    "Point",
    "Press",
    "Prove",
    "Raise",
    "Reach",
    "Refer",
    "Relax",
    "Serve",
    "Shall",
    "Share",
    "Shift",
    "Shoot",
    "Sleep",
    "Solve",
    "Sound",
    "Speak",
    "Spend",
    "Split",
    "Stand",
    "Start",
    "State",
    "Stick",
    "Study",
    "Teach",
    "Thank",
    "Think",
    "Throw",
    "Touch",
    "Train",
    "Treat",
    "Trust",
    "Visit",
    "Voice",
    "Waste",
    "Watch",
    "Worry",
    "Would",
    "Write",
]


guess_list = []


class Guess:
    """This object will be used to keep track of the guesses that have been made by the user."""

    # This will add to our list of letters that have been guessed
    def add_guess_list(self, letter):
        """Add a letter to the list of guessed letters.

        Args:
            letter (str): The letter that the user has guessed.
        """
        guess_list.append(letter)

    # This function will check to see if the current choice of letter has been guessed or not.
    # If no then it will return a false. If yes then it will return a true
    def check_guess_list(self, letter):
        """Check to see if the letter has been guessed.

        Args:
            letter (str): The letter that the user has guessed.

        Returns:
            bool: True if the letter has been guessed, False if it has not been guessed
        """
        for i in range(len(guess_list)):
            if guess_list[i] == letter:
                return True
        return False

    # This will randomly select a word from the list of words based on what time it is.
    def pick_word(self, seed):
        """Pick a word from the list of words.

        Args:
            seed (str): A seed to use for the random number generator.

        Returns:
            str: A word from the list of words.
        """
        current_time = time.localtime()
        random.seed(current_time[4] + current_time[3] + seed)
        word = random.choice(word_list)
        return word

    # Clears the letters off of the guessed list
    def clear_guess_list(self):
        """Clear the list of guessed letters."""
        guess_list.clear()

    # Returns a letter from the list of letters
    def letter_select(self, choice):
        """Select a letter from the list of letters.

        Args:
            choice (int): The index of the letter to select.

        Returns:
            str: The letter at the specified index.
        """
        return choice_list[choice]
